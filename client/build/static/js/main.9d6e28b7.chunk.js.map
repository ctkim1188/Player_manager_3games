{"version":3,"sources":["views/PlayerList.js","components/PlayerForm.js","components/GameOneStatus.js","components/GameTwoStatus.js","components/GameThreeStatus.js","App.js","serviceWorker.js","index.js"],"names":["PlayerList","props","useState","players","setPlayers","useEffect","axios","get","then","res","data","removeFromDom","playerId","newPlayers","i","length","_id","push","to","map","player","index","key","firstName","lastName","primaryPosition","onClick","event","playerID","delete","PlayerForm","errors","setErrors","setFirstName","setLastName","setPrimaryPosition","err","onSubmit","preventDefault","post","navigate","catch","errorResponse","response","errorArray","Object","keys","message","type","onChange","target","value","PlayerStatusGameOne","e","id","gameOneStatus","put","console","log","style","background","padding","borderRadius","border","PlayerStatusGameTwo","gameTwoStatus","PlayerStatusGameThree","gameThreeStatus","App","className","path","default","from","noThrow","GameOneStatus","GameTwoStatus","GameThreeStatus","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d6e28b7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\n\r\n\r\n\r\nconst PlayerList = props =>{\r\n\r\n    const[players, setPlayers] = useState([]);\r\n\r\n    useEffect( ()=> {\r\n        axios.get('http://localhost:9000/api/lakers/players')\r\n            .then( res => setPlayers(res.data))\r\n    },[])\r\n\r\n    const onDelete = playerID => {\r\n        axios.delete('http://localhost:9000/api/lakers/' + playerID)\r\n        .then( res => {\r\n            removeFromDom(playerID);\r\n            // navigate('/');\r\n        })\r\n    }\r\n    \r\n    const removeFromDom = playerId => {\r\n        let newPlayers = [];\r\n        for( let i = 0; i < players.length; i++){\r\n            if(players[i]._id !== playerId){\r\n                newPlayers.push(players[i]);\r\n            }\r\n        }\r\n        setPlayers(newPlayers);\r\n        // setPlayers(players.filter((player) => player._id !== playerId))\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n        {/* <p> <a href = '/'>Roster Dashboard</a> <a href = '/status'>Player Status</a> </p> */}\r\n        <p> <Link to ='/lakers/roster'>Roster Dashboard</Link> {''} <Link to = '/status/game/1'>Player Status</Link> </p>\r\n\r\n        <h3> <Link to ='/lakers/roster'>List</Link> <Link to ='/lakers/add'>Add Player</Link> </h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Player Name</td>\r\n                    <td>Primary Position</td>\r\n                    <td>Remove</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {players.map((player, index) => {\r\n                    return(\r\n                        <tr  key ={index}>\r\n                            <td>\r\n                                <p>{player.firstName} {player.lastName}</p>\r\n                            </td>\r\n                            <td>\r\n                                <p>{player.primaryPosition}</p>\r\n                            </td>\r\n                            <td>\r\n                                <button onClick = {event => {onDelete(player._id)}} >Remove</button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PlayerList","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\n\r\nconst PlayerForm = () => {\r\n\r\n    const [errors, setErrors] = useState([]);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [primaryPosition, setPrimaryPosition] = useState(\"PG\");\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        axios.post('http://localhost:9000/api/lakers/add', {\r\n            firstName,\r\n            lastName,\r\n            primaryPosition\r\n        })\r\n            .then(res => {\r\n                navigate('/');\r\n            })\r\n            .catch( err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArray =[];\r\n                for(const key of Object.keys(errorResponse)){\r\n                    errorArray.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArray);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <p> <Link to ='/lakers/roster'>Roster Dashboard</Link> {''} <Link to = '/status/game/1'>Player Status</Link> </p>\r\n\r\n            {errors.map ((err, index) => \r\n                <p key ={index}> {err} </p>\r\n            )}\r\n\r\n            <form onSubmit ={onSubmit}>\r\n                <label>First Name: </label>\r\n                <input type = \"text\" onChange = {(event) => setFirstName(event.target.value)}/>\r\n                <br/>\r\n                <label>Last Name: </label>\r\n                <input type = \"text\" onChange = {(event) => setLastName(event.target.value)}/>\r\n                <br/>\r\n                <label>Primary Position: </label>\r\n                <select onChange = {(event) => setPrimaryPosition(event.target.value)}>\r\n                    <option value = 'PG'> PG </option>\r\n                    <option value = 'SG'> SG </option>\r\n                    <option value = 'SF'> SF </option>\r\n                    <option value = 'PF'> PF </option>\r\n                    <option value = 'C'> C </option>\r\n                </select>\r\n                <br/>\r\n                <Link to ='/'>Cancel</Link>\r\n                <span>    </span>\r\n                <button>Submit</button>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default PlayerForm","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport{Link} from '@reach/router';\r\n\r\nconst PlayerStatusGameOne = props => {\r\n\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    useEffect( () => {\r\n        axios.get('http://localhost:9000/api/lakers/players')\r\n            .then(res => {\r\n                setPlayers(res.data)\r\n            })\r\n    },[])\r\n\r\n    const onClick = (e, id, gameOneStatus) => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:9000/api/lakers/' + id, {\r\n            gameOneStatus: gameOneStatus\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                let newPlayers = [];\r\n                for(let i = 0; i < players.length; i++){\r\n                    if(players[i]._id === res.data._id){\r\n                        newPlayers.push(res.data);\r\n                    }else{\r\n                        newPlayers.push(players[i]);\r\n                    }\r\n                }\r\n                setPlayers(newPlayers);\r\n            })\r\n    }\r\n\r\n    // const updateDom = () => {\r\n    //     // console.log(players);\r\n    //     setPlayers(players);\r\n    //     navigate('/status/game/1')\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <Link to ='/status/game/1'>Game 1</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/2'>Game 2</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/3'>Game 3</Link>\r\n        <h2>Game One Status</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Player</td>\r\n                    <td>Status</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {players.map((player, index) => {\r\n                    return(\r\n                    <tr key ={index}>\r\n                        <td>{player.firstName} {player.lastName}</td>\r\n                        <td><button style={player.gameOneStatus === \"yes\" ? {background:\"green\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}}  onClick = {(e) => {onClick(e,player._id, \"yes\")}} >Playing</button></td>\r\n                        <td><button style={player.gameOneStatus === \"no\" ? {background:\"red\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"no\")}}>Not Playing</button></td>\r\n                        <td><button style={player.gameOneStatus === \"ukn\" ? {background:\"yellow\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"ukn\")}}>Uncertain</button></td>\r\n                    </tr>              \r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        \r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PlayerStatusGameOne","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport{Link} from '@reach/router';\r\n\r\nconst PlayerStatusGameTwo = props => {\r\n\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    useEffect( () => {\r\n        axios.get('http://localhost:9000/api/lakers/players')\r\n            .then(res => {\r\n                setPlayers(res.data)\r\n            })\r\n    },[])\r\n\r\n    const onClick = (e, id, gameOneStatus) => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:9000/api/lakers/' + id, {\r\n            gameTwoStatus: gameOneStatus\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                let newPlayers = [];\r\n                for(let i = 0; i < players.length; i++){\r\n                    if(players[i]._id === res.data._id){\r\n                        newPlayers.push(res.data);\r\n                    }else{\r\n                        newPlayers.push(players[i]);\r\n                    }\r\n                }\r\n                setPlayers(newPlayers);\r\n            })\r\n    }\r\n\r\n    //understand why this is wrong\r\n    // const updateDom = () => {\r\n    //     setPlayers(players);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <Link to ='/status/game/1'>Game 1</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/2'>Game 2</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/3'>Game 3</Link>\r\n        <h2>Game Two Status</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Player</td>\r\n                    <td>Status</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {players.map((player, index) => {\r\n                    return(\r\n                    <tr key ={index}>\r\n                        <td>{player.firstName} {player.lastName}</td>\r\n                        <td><button style={player.gameTwoStatus === \"yes\" ? {background:\"green\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}}  onClick = {(e) => {onClick(e,player._id, \"yes\")}} >Playing</button></td>\r\n                        <td><button style={player.gameTwoStatus === \"no\" ? {background:\"red\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"no\")}}>Not Playing</button></td>\r\n                        <td><button style={player.gameTwoStatus === \"ukn\" ? {background:\"yellow\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"ukn\")}}>Uncertain</button></td>\r\n                    </tr>              \r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        \r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PlayerStatusGameTwo","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport{Link} from '@reach/router';\r\n\r\nconst PlayerStatusGameThree = props => {\r\n\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    useEffect( () => {\r\n        axios.get('http://localhost:9000/api/lakers/players')\r\n            .then(res => {\r\n                setPlayers(res.data)\r\n            })\r\n    },[])\r\n\r\n    const onClick = (e, id, gameOneStatus) => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:9000/api/lakers/' + id, {\r\n            gameThreeStatus: gameOneStatus\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                let newPlayers = [];\r\n                for(let i = 0; i < players.length; i++){\r\n                    if(players[i]._id === res.data._id){\r\n                        newPlayers.push(res.data);\r\n                    }else{\r\n                        newPlayers.push(players[i]);\r\n                    }\r\n                }\r\n                setPlayers(newPlayers);\r\n            })\r\n    }\r\n\r\n    // const updateDom = () => {\r\n    //     // console.log(players);\r\n    //     setPlayers(players);\r\n    //     navigate('/status/game/1')\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <Link to ='/status/game/1'>Game 1</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/2'>Game 2</Link>\r\n        <span>  </span>\r\n        <Link to ='/status/game/3'>Game 3</Link>\r\n        <h2>Game Three Status</h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Player</td>\r\n                    <td>Status</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {players.map((player, index) => {\r\n                    return(\r\n                    <tr key ={index}>\r\n                        <td>{player.firstName} {player.lastName}</td>\r\n                        <td><button style={player.gameThreeStatus === \"yes\" ? {background:\"green\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}}  onClick = {(e) => {onClick(e,player._id, \"yes\")}} >Playing</button></td>\r\n                        <td><button style={player.gameThreeStatus === \"no\" ? {background:\"red\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"no\")}}>Not Playing</button></td>\r\n                        <td><button style={player.gameThreeStatus === \"ukn\" ? {background:\"yellow\", padding:\"5px\", borderRadius:\"5px\", border:\"none\"} : {background:\"\",padding:\"5px\", borderRadius:\"5px\", border:\"none\"}} onClick = {(e) => {onClick(e,player._id, \"ukn\")}}>Uncertain</button></td>\r\n                    </tr>              \r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        \r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PlayerStatusGameThree","import React from 'react';\nimport './App.css';\nimport PlayerList from './views/PlayerList';\nimport {Router, Redirect} from '@reach/router';\nimport PlayerForm from './components/PlayerForm';\nimport GameOneStatus from './components/GameOneStatus';\nimport GameTwoStatus from './components/GameTwoStatus';\nimport GameThreeStatus from './components/GameThreeStatus';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <PlayerList path ='/lakers/list' default/>\n          <Redirect from ='/' to ='/lakers/list' noThrow/>\n          <PlayerForm path = '/lakers/add'/>\n          <GameOneStatus path = '/status/game/1'/>\n          <GameTwoStatus path = '/status/game/2'/>\n          <GameThreeStatus path = '/status/game/3'/>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}